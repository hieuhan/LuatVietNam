@using LawsVN.App_GlobalResources
@using LawsVN.Library
@using LawsVN.Models
@model PartialPaginationAjax
@{
    int start = 1;
    Model.LinkLimit = Constants.RowAmount3;
    int pageCount = (int)Math.Ceiling(Model.TotalPage / (double)Model.PageSize);
    int end = pageCount;
    if (pageCount > Model.LinkLimit)
    {
        var middle = (int)Math.Ceiling(Model.LinkLimit / 2d) - 1;
        var below = Model.PageIndex - middle;
        var above = Model.PageIndex + middle;
        if (below < 2)
        {
            above = Model.LinkLimit;
            below = 1;
        }
        else if (above > (pageCount - 2))
        {
            above = pageCount;
            below = pageCount - Model.LinkLimit + 1;
        }
        start = below;
        end = above;
    }
    <div class="pagination">
        <div class="pagination-left">
            @using (Ajax.BeginForm(Model.ActionName, Model.ControllerName,
                    new
                    {
                        languageid = Model.LanguageId,
                        usingDisplayTable = Model.UsingDisplayTable,
                        paginationType = Model.PaginationType,
                        postTimeRight = Model.PostTimeRight,
                        keywords = Model.Keywords,
                        Title_1 = Model.SignerName,
                        fieldId = Model.FieldId,
                        effectStatusName = Model.EffectStatusName,
                        effectStatusId = Model.EffectStatusId,
                        organId = Model.OrganId,
                        docTypeId = Model.DocTypeId,
                        updateTargetId = Model.LawsAjaxOptions.UpdateTargetId,
                        insertionMode = Model.LawsAjaxOptions.InsertionMode,
                        controllerName = Model.ControllerName,
                        actionName = Model.ActionName,
                        pageSize = Model.PageSize,
                        linkLimit = Model.LinkLimit,
                        docId = Model.DocId,
                        docGroupId = Model.DocGroupId,
                        registTypeId = Model.RegistTypeId,
                        relatetypeid = Model.RelateTypeId,
                        provinceid = Model.ProvinceId,
                        DateFrom = Model.DateFrom,
                        DateTo = Model.DateTo,
                        year = Model.Year,
                        Group = Model.LawTerminGroupId,
                        Title = Model.TerName,
                        messageTypeId = Model.MessageTypeId,
                        isMyMessage = Model.IsMyMessage,
                        categoryId = Model.CategoryId,
                        tagId = Model.TagId,
                        searchOptions = Model.SearchOptions,
                        signerId = Model.SignerId,
                        transactionStatusId = Model.TransactionStatusId,
                        displayPosition = Model.DisplayPosition,
                        isSearchExact = Model.IsSearchExact
                        //,page = Model.PageIndex+1
                        ,
                        isMobile = Model.IsMobile
                    },
                    new AjaxOptions
                    {
                        HttpMethod = Model.LawsAjaxOptions.HttpMethod.TrimmedOrDefault("Get"),
                        UpdateTargetId = Model.LawsAjaxOptions.UpdateTargetId,
                        InsertionMode = Model.LawsAjaxOptions.InsertionMode,
                        OnBegin = string.Format("lawsVn.ajaxEvents.OnBegin('{0}')", Model.LawsAjaxOptions.UpdateTargetId),
                        OnComplete = string.Format("lawsVn.ajaxEvents.OnCompleteV2('{0}')", Model.LawsAjaxOptions.UpdateTargetId),
                        OnSuccess = Model.LawsAjaxOptions.OnSuccess.TrimmedOrDefault(string.Empty)
                    }))
            {
                <select class="select-page select-onchange" id="dllNumberOfResults" tabindex="1" name="showNumberOfResults">
                    @for (int index = 1; index <= 5; index++)
                    {
                        <option value="@(index * 5)" @(index * 5 == Model.ShowNumberOfResults ? "selected" : string.Empty) data-title="@string.Format("Hiển thị {0} {1}", index * 5, Resource.Result)">@(index * 5) @((Request.Url.LocalPath == "/user/lich-su-giao-dich.html" || Request.Url.LocalPath == "/Ajax/HistoryTransactions_GetPage") ? "giao dịch" : Resource.Result)</option>
                    }
                </select>
            }
        </div>

        <div class="pagination-right">
            <input class="input-page-item" type="hidden" id="txtChangePage" name="page" value="@(Model.PageLoad ? (Model.PageIndex <= 0 ? 1 : Model.PageIndex) : Model.PageIndex + 1)">
            @if (Model.PageIndex > 0)
            {
                @Ajax.ActionLink(@"«", string.Empty, string.Empty,
                      null,
                      new AjaxOptions
                      {
                          Url = Url.Action(Model.ActionName, Model.ControllerName, new
                          {
                              effectStatusId = Model.EffectStatusId,
                              docTypeId = Model.DocTypeId,
                              isSearchExact = Model.IsSearchExact,
                              keywords = Model.Keywords,
                              docGroupId = Model.DocGroupId
                              ,
                              urlPaging = Model.UrlPaging
                              ,
                              effectStatusName = Model.EffectStatusName
                              ,
                              fieldId = Model.FieldId
                              ,
                              languageId = Model.LanguageId
                              ,
                              usingDisplayTable = Model.UsingDisplayTable
                              ,
                              updateTargetId = Model.LawsAjaxOptions.UpdateTargetId
                              ,
                              insertionMode = Model.LawsAjaxOptions.InsertionMode
                              ,
                              controllerName = Model.ControllerName
                              ,
                              actionName = Model.ActionName
                              ,
                              pageSize = Model.PageSize
                              ,
                              linkLimit = Model.LinkLimit
                              ,
                              page = Model.PageIndex
                              ,
                              Group = Model.LawTerminGroupId
                              ,
                              Title = Model.TerName
                              ,
                              Title_1 = Model.SignerName
                              ,
                              ShowNumberOfResults = Model.ShowNumberOfResults
                              ,
                              categoryId = Model.CategoryId
                              ,
                              docId = Model.DocId
                              ,
                              displayPosition = Model.DisplayPosition
                              ,
                              isMobile = Model.IsMobile
                          }),
                          UpdateTargetId = Model.LawsAjaxOptions.UpdateTargetId,
                          InsertionMode = Model.LawsAjaxOptions.InsertionMode,
                          HttpMethod = Model.LawsAjaxOptions.HttpMethod.TrimmedOrDefault("Get"),
                          OnBegin = "lawsVn.ajaxEvents.OnBegin('" + Model.LawsAjaxOptions.UpdateTargetId + "')",
                          OnComplete = string.Format("lawsVn.ajaxEvents.OnCompleteV2('{0}')", Model.LawsAjaxOptions.UpdateTargetId),
                          OnSuccess = Model.LawsAjaxOptions.OnSuccess.TrimmedOrDefault(string.Empty)
                      }, new { @class = "pagination-item" })
            }
            @if (start > 1 && Model.PageIndex < 3)
            {
                @Ajax.ActionLink(@"1", string.Empty, string.Empty,
                      null,
                      new AjaxOptions
                      {
                          Url = Url.Action(Model.ActionName, Model.ControllerName, new
                          {
                              effectStatusId = Model.EffectStatusId,
                              docTypeId = Model.DocTypeId,
                              isSearchExact = Model.IsSearchExact,
                              keywords = Model.Keywords,
                              docGroupId = Model.DocGroupId
                              ,
                              urlPaging = Model.UrlPaging
                              ,
                              effectStatusName = Model.EffectStatusName
                              ,
                              fieldId = Model.FieldId
                              ,
                              languageId = Model.LanguageId
                              ,
                              usingDisplayTable = Model.UsingDisplayTable
                              ,
                              updateTargetId = Model.LawsAjaxOptions.UpdateTargetId
                              ,
                              insertionMode = Model.LawsAjaxOptions.InsertionMode
                              ,
                              controllerName = Model.ControllerName
                              ,
                              actionName = Model.ActionName
                              ,
                              pageSize = Model.PageSize
                              ,
                              linkLimit = Model.LinkLimit
                              ,
                              page = 1
                              ,
                              Group = Model.LawTerminGroupId
                              ,
                              Title = Model.TerName
                              ,
                              Title_1 = Model.SignerName
                              ,
                              ShowNumberOfResults = Model.ShowNumberOfResults
                              ,
                              categoryId = Model.CategoryId
                              ,
                              docId = Model.DocId
                              ,
                              displayPosition = Model.DisplayPosition
                              ,
                              isMobile = Model.IsMobile
                          }),
                          UpdateTargetId = Model.LawsAjaxOptions.UpdateTargetId,
                          InsertionMode = Model.LawsAjaxOptions.InsertionMode,
                          HttpMethod = Model.LawsAjaxOptions.HttpMethod.TrimmedOrDefault("Get"),
                          OnBegin = "lawsVn.ajaxEvents.OnBegin('" + Model.LawsAjaxOptions.UpdateTargetId + "')",
                          OnComplete = string.Format("lawsVn.ajaxEvents.OnCompleteV2('{0}')", Model.LawsAjaxOptions.UpdateTargetId),
                          OnSuccess = Model.LawsAjaxOptions.OnSuccess.TrimmedOrDefault(string.Empty)
                      }, new { @class = "pagination-item" })
                if (start > 3 && Model.PageIndex < 4)
                {
                    @Ajax.ActionLink(@"2", string.Empty, string.Empty,
                          null,
                          new AjaxOptions
                          {
                              Url = Url.Action(Model.ActionName, Model.ControllerName, new
                              {
                                  effectStatusId = Model.EffectStatusId,
                                  docTypeId = Model.DocTypeId,
                                  isSearchExact = Model.IsSearchExact,
                                  keywords = Model.Keywords,
                                  docGroupId = Model.DocGroupId
                                  ,
                                  urlPaging = Model.UrlPaging
                                  ,
                                  effectStatusName = Model.EffectStatusName
                                  ,
                                  fieldId = Model.FieldId
                                  ,
                                  languageId = Model.LanguageId
                                  ,
                                  usingDisplayTable = Model.UsingDisplayTable
                                  ,
                                  updateTargetId = Model.LawsAjaxOptions.UpdateTargetId
                                  ,
                                  insertionMode = Model.LawsAjaxOptions.InsertionMode
                                  ,
                                  controllerName = Model.ControllerName
                                  ,
                                  actionName = Model.ActionName
                                  ,
                                  pageSize = Model.PageSize
                                  ,
                                  linkLimit = Model.LinkLimit
                                  ,
                                  page = 2
                                  ,
                                  Group = Model.LawTerminGroupId
                                  ,
                                  Title = Model.TerName
                                  ,
                                  Title_1 = Model.SignerName
                                  ,
                                  ShowNumberOfResults = Model.ShowNumberOfResults
                                  ,
                                  categoryId = Model.CategoryId
                                  ,
                                  docId = Model.DocId
                                  ,
                                  displayPosition = Model.DisplayPosition
                                  ,
                                  isMobile = Model.IsMobile
                              }),
                              UpdateTargetId = Model.LawsAjaxOptions.UpdateTargetId,
                              InsertionMode = Model.LawsAjaxOptions.InsertionMode,
                              HttpMethod = Model.LawsAjaxOptions.HttpMethod.TrimmedOrDefault("Get"),
                              OnBegin = "lawsVn.ajaxEvents.OnBegin('" + Model.LawsAjaxOptions.UpdateTargetId + "')",
                              OnComplete = string.Format("lawsVn.ajaxEvents.OnCompleteV2('{0}')", Model.LawsAjaxOptions.UpdateTargetId),
                              OnSuccess = Model.LawsAjaxOptions.OnSuccess.TrimmedOrDefault(string.Empty)
                          }, new { @class = "pagination-item" })
                }
                @*if (start > 2)
                    {
                        <span class="pagination-item">...</span>
                    }*@
            }
            @for (int index = start; index <= end; index++)
            {
                if (index == (Model.PageLoad ? (Model.PageIndex <= 0 ? 1 : Model.PageIndex) : Model.PageIndex + 1))
                {
                    <span class="pagination-item active"><span>@(Model.PageLoad ? (Model.PageIndex <= 0 ? 1 : Model.PageIndex) : Model.PageIndex + 1)</span></span>
                }
                else
                {
                    @Ajax.ActionLink(index.ToString(), string.Empty, string.Empty,
                          null,
                          new AjaxOptions
                          {
                              Url = Url.Action(Model.ActionName, Model.ControllerName, new
                              {
                                  effectStatusId = Model.EffectStatusId,
                                  docTypeId = Model.DocTypeId,
                                  isSearchExact = Model.IsSearchExact,
                                  keywords = Model.Keywords,
                                  docGroupId = Model.DocGroupId
                                  ,
                                  urlPaging = Model.UrlPaging
                                  ,
                                  effectStatusName = Model.EffectStatusName
                                  ,
                                  fieldId = Model.FieldId
                                  ,
                                  languageId = Model.LanguageId
                                  ,
                                  usingDisplayTable = Model.UsingDisplayTable
                                  ,
                                  updateTargetId = Model.LawsAjaxOptions.UpdateTargetId
                                  ,
                                  insertionMode = Model.LawsAjaxOptions.InsertionMode
                                  ,
                                  controllerName = Model.ControllerName
                                  ,
                                  actionName = Model.ActionName
                                  ,
                                  pageSize = Model.PageSize
                                  ,
                                  linkLimit = Model.LinkLimit
                                  ,
                                  page = index
                                  ,
                                  Group = Model.LawTerminGroupId
                                  ,
                                  Title = Model.TerName
                                  ,
                                  Title_1 = Model.SignerName
                                  ,
                                  ShowNumberOfResults = Model.ShowNumberOfResults
                                  ,
                                  categoryId = Model.CategoryId
                                  ,
                                  docId = Model.DocId
                                  ,
                                  displayPosition = Model.DisplayPosition
                                  ,
                                  isMobile = Model.IsMobile
                              }),
                              UpdateTargetId = Model.LawsAjaxOptions.UpdateTargetId,
                              InsertionMode = Model.LawsAjaxOptions.InsertionMode,
                              HttpMethod = Model.LawsAjaxOptions.HttpMethod.TrimmedOrDefault("Get"),
                              OnBegin = "lawsVn.ajaxEvents.OnBegin('" + Model.LawsAjaxOptions.UpdateTargetId + "')",
                              OnComplete = string.Format("lawsVn.ajaxEvents.OnCompleteV2('{0}')", Model.LawsAjaxOptions.UpdateTargetId),
                              OnSuccess = Model.LawsAjaxOptions.OnSuccess.TrimmedOrDefault(string.Empty)
                          }, new { @class = "pagination-item" })
                }
            }
            @if (Model.PageIndex < pageCount - 1)
            {
                @Ajax.ActionLink(@"»", string.Empty, string.Empty,
                      null,
                      new AjaxOptions
                      {
                          Url = Url.Action(Model.ActionName, Model.ControllerName, new
                          {
                              effectStatusId = Model.EffectStatusId,
                              docTypeId = Model.DocTypeId,
                              isSearchExact = Model.IsSearchExact,
                              keywords = Model.Keywords,
                              docGroupId = Model.DocGroupId
                              ,
                              urlPaging = Model.UrlPaging
                              ,
                              effectStatusName = Model.EffectStatusName
                              ,
                              fieldId = Model.FieldId
                              ,
                              languageId = Model.LanguageId
                              ,
                              usingDisplayTable = Model.UsingDisplayTable
                              ,
                              updateTargetId = Model.LawsAjaxOptions.UpdateTargetId
                              ,
                              insertionMode = Model.LawsAjaxOptions.InsertionMode
                              ,
                              controllerName = Model.ControllerName
                              ,
                              actionName = Model.ActionName
                              ,
                              pageSize = Model.PageSize
                              ,
                              linkLimit = Model.LinkLimit
                              ,
                              page = Model.PageIndex + 2
                              ,
                              Group = Model.LawTerminGroupId
                              ,
                              Title = Model.TerName
                              ,
                              Title_1 = Model.SignerName
                              ,
                              ShowNumberOfResults = Model.ShowNumberOfResults
                              ,
                              categoryId = Model.CategoryId
                              ,
                              docId = Model.DocId
                              ,
                              displayPosition = Model.DisplayPosition
                              ,
                              isMobile = Model.IsMobile
                          }),
                          UpdateTargetId = Model.LawsAjaxOptions.UpdateTargetId,
                          InsertionMode = Model.LawsAjaxOptions.InsertionMode,
                          HttpMethod = Model.LawsAjaxOptions.HttpMethod.TrimmedOrDefault("Get"),
                          OnBegin = "lawsVn.ajaxEvents.OnBegin('" + Model.LawsAjaxOptions.UpdateTargetId + "')",
                          OnComplete = string.Format("lawsVn.ajaxEvents.OnCompleteV2('{0}')", Model.LawsAjaxOptions.UpdateTargetId),
                          OnSuccess = Model.LawsAjaxOptions.OnSuccess.TrimmedOrDefault(string.Empty)
                      }, new { @class = "pagination-item pagination-next" })
            }
        </div>

    </div>
}
