@using LawsVN.Models
@model PartialPaginationAjax
@{
    int start = 1;
    int pageCount = (int) Math.Ceiling(Model.TotalPage / (double) Model.PageSize);
    int end = pageCount;
    if (pageCount > Model.LinkLimit)
    {
        var middle = (int)Math.Ceiling(Model.LinkLimit / 2d) - 1;
        var below = Model.PageIndex - middle;
        var above = Model.PageIndex + middle;
        if (below < 2)
        {
            above = Model.LinkLimit;
            below = 1;
        }
        else if (above > (pageCount - 2))
        {
            above = pageCount;
            below = pageCount - Model.LinkLimit + 1;
        }
        start = below;
        end = above;
    }
    <div class="pagination">
        <a href="#" id="pagination-loadmore" title="Xem thêm bài viết" style="float: left; background: #969696; padding: 0 10px; height: 30px; line-height: 30px; font-size: 14px; color: #fff;" >Xem thêm bài viết</a>
        <div class="pagination-right2">
            @if (Model.PageIndex > 1)
            {
                @Ajax.ActionLink(@"«", string.Empty, string.Empty,
                    null,
                    new AjaxOptions
                    {
                        Url = Url.Action(Model.ActionName, Model.ControllerName, new
                        {
                            categoryId = Model.CategoryId
                            , updateTargetId = Model.LawsAjaxOptions.UpdateTargetId
                            , insertionMode = Model.LawsAjaxOptions.InsertionMode
                            , controllerName = Model.ControllerName
                            , actionName = Model.ActionName
                            , pageSize = Model.PageSize
                            , linkLimit = Model.LinkLimit
                            , page = Model.PageIndex - 1
                        }),
                        UpdateTargetId = Model.LawsAjaxOptions.UpdateTargetId,
                        InsertionMode = Model.LawsAjaxOptions.InsertionMode,
                        HttpMethod = "Get",
                        OnBegin = "lawsVn.ajaxEvents.OnBeginV3('" + Model.LawsAjaxOptions.UpdateTargetId + "')",
                        OnComplete = "lawsVn.ajaxEvents.OnCompleteV3('" + Model.LawsAjaxOptions.UpdateTargetId + "')"
                    }, new {@class = "pagination-item"})
            }
            @if (start > 1)
            {
                @Ajax.ActionLink(@"1", string.Empty, string.Empty,
                    null,
                    new AjaxOptions
                    {
                        Url = Url.Action(Model.ActionName, Model.ControllerName, new
                        {
                            categoryId = Model.CategoryId
                            , updateTargetId = Model.LawsAjaxOptions.UpdateTargetId
                            , insertionMode = Model.LawsAjaxOptions.InsertionMode
                            , controllerName = Model.ControllerName
                            , actionName = Model.ActionName
                            , pageSize = Model.PageSize
                            , linkLimit = Model.LinkLimit
                            , page = 1
                        }),
                        UpdateTargetId = Model.LawsAjaxOptions.UpdateTargetId,
                        InsertionMode = Model.LawsAjaxOptions.InsertionMode,
                        HttpMethod = "Get",
                        OnBegin = "lawsVn.ajaxEvents.OnBeginV3('" + Model.LawsAjaxOptions.UpdateTargetId + "')",
                        OnComplete = "lawsVn.ajaxEvents.OnCompleteV3('" + Model.LawsAjaxOptions.UpdateTargetId + "')"
                    }, new {@class = "pagination-item"})
                if (start > 3)
                {
                    @Ajax.ActionLink(@"2", string.Empty, string.Empty,
                        null,
                        new AjaxOptions
                        {
                            Url = Url.Action(Model.ActionName, Model.ControllerName, new
                            {
                                categoryId = Model.CategoryId
                                , updateTargetId = Model.LawsAjaxOptions.UpdateTargetId
                                , insertionMode = Model.LawsAjaxOptions.InsertionMode
                                , controllerName = Model.ControllerName
                                , actionName = Model.ActionName
                                , pageSize = Model.PageSize
                                , linkLimit = Model.LinkLimit
                                , page = 2
                            }),
                            UpdateTargetId = Model.LawsAjaxOptions.UpdateTargetId,
                            InsertionMode = Model.LawsAjaxOptions.InsertionMode,
                            HttpMethod = "Get",
                            OnBegin = "lawsVn.ajaxEvents.OnBeginV3('" + Model.LawsAjaxOptions.UpdateTargetId + "')",
                            OnComplete = "lawsVn.ajaxEvents.OnCompleteV3('" + Model.LawsAjaxOptions.UpdateTargetId + "')"
                        }, new {@class = "pagination-item"})
                }
                if (start > 2)
                {
                    <span class="pagination-item"><span>...</span></span>
                }
            }
            @for (int index = start; index <= end; index++)
            {
                if (index == Model.PageIndex)
                {
                    <span class="pagination-item active"><span>@Model.PageIndex</span></span>
                }
                else
                {
                    @Ajax.ActionLink(index.ToString(), string.Empty, string.Empty,
                        null,
                        new AjaxOptions
                        {
                            Url = Url.Action(Model.ActionName, Model.ControllerName, new
                            {
                                categoryId = Model.CategoryId
                                , updateTargetId = Model.LawsAjaxOptions.UpdateTargetId
                                , insertionMode = Model.LawsAjaxOptions.InsertionMode
                                , controllerName = Model.ControllerName
                                , actionName = Model.ActionName
                                , pageSize = Model.PageSize
                                , linkLimit = Model.LinkLimit
                                , page = index
                            }),
                            UpdateTargetId = Model.LawsAjaxOptions.UpdateTargetId,
                            InsertionMode = Model.LawsAjaxOptions.InsertionMode,
                            HttpMethod = "Get",
                            OnBegin = "lawsVn.ajaxEvents.OnBeginV3('" + Model.LawsAjaxOptions.UpdateTargetId + "')",
                            OnComplete = "lawsVn.ajaxEvents.OnCompleteV3('" + Model.LawsAjaxOptions.UpdateTargetId + "')"
                        }, new {@class = "pagination-item"})
                }
            }
            @if (end < pageCount)
            {
                if (end < pageCount - 1)
                {
                    <span class="pagination-item"><span>...</span></span>
                }
                if (end < pageCount - 2)
                {
                    @Ajax.ActionLink(pageCount.ToString(), string.Empty, string.Empty,
                        null,
                        new AjaxOptions
                        {
                            Url = Url.Action(Model.ActionName, Model.ControllerName, new
                            {
                                categoryId = Model.CategoryId
                                , updateTargetId = Model.LawsAjaxOptions.UpdateTargetId
                                , insertionMode = Model.LawsAjaxOptions.InsertionMode
                                , controllerName = Model.ControllerName
                                , actionName = Model.ActionName
                                , pageSize = Model.PageSize
                                , linkLimit = Model.LinkLimit
                                , page = pageCount
                            }),
                            UpdateTargetId = Model.LawsAjaxOptions.UpdateTargetId,
                            InsertionMode = Model.LawsAjaxOptions.InsertionMode,
                            HttpMethod = "Get",
                            OnBegin = "lawsVn.ajaxEvents.OnBeginV3('" + Model.LawsAjaxOptions.UpdateTargetId + "')",
                            OnComplete = "lawsVn.ajaxEvents.OnCompleteV3('" + Model.LawsAjaxOptions.UpdateTargetId + "')"
                        }, new {@class = "pagination-item"})
                }
            }

            @if (Model.PageIndex < pageCount)
            {
                @Ajax.ActionLink(@"»", string.Empty, string.Empty,
                    null,
                    new AjaxOptions
                    {
                        Url = Url.Action(Model.ActionName, Model.ControllerName, new
                        {
                            categoryId = Model.CategoryId
                            , updateTargetId = Model.LawsAjaxOptions.UpdateTargetId
                            , insertionMode = Model.LawsAjaxOptions.InsertionMode
                            , controllerName = Model.ControllerName
                            , actionName = Model.ActionName
                            , pageSize = Model.PageSize
                            , linkLimit = Model.LinkLimit
                            , page = Model.PageIndex + 1
                        }),
                        UpdateTargetId = Model.LawsAjaxOptions.UpdateTargetId,
                        InsertionMode = Model.LawsAjaxOptions.InsertionMode,
                        HttpMethod = "Get",
                        OnBegin = "lawsVn.ajaxEvents.OnBeginV3('" + Model.LawsAjaxOptions.UpdateTargetId + "')",
                        OnComplete = "lawsVn.ajaxEvents.OnCompleteV3('" + Model.LawsAjaxOptions.UpdateTargetId + "')"
                    }, new {@class = "pagination-item pagination-next"})
            }
        </div>
    </div>
}